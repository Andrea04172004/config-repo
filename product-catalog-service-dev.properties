spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect


server.port=8082
spring.cloud.loadbalancer.ribbon.enabled=false

spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=jdbc:mysql://database:3306/adetails_dev
#spring.datasource.url=jdbc:mysql://product-catalog-database:3308/adetails_dev

management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://eurekaserver:8761/eureka

spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.cloud.stream.kafka.binder.zkNodes=kafka
spring.cloud.stream.kafka.binder.brokers=kafka

#-------------for getProductsByDifferentNumberType method ---------------------
spring.cloud.stream.bindings.getAnalogs.destination=getAnalogsTopic
spring.cloud.stream.bindings.getAnalogs.content-type=application/json

spring.cloud.stream.bindings.resultAnalogs.destination=resultAnalogsTopic
spring.cloud.stream.bindings.resultAnalogs.content-type=application/json
spring.cloud.stream.bindings.resultAnalogs.group=tecDocGroup
#--------------------------------------------------------------------------

#-------------for getCrossesForProduct method ---------------------
spring.cloud.stream.bindings.getCrosses.destination=getCrossesTopic
spring.cloud.stream.bindings.getCrosses.content-type=application/json

spring.cloud.stream.bindings.resultCrosses.destination=resultCrossesTopic
spring.cloud.stream.bindings.resultCrosses.content-type=application/json
spring.cloud.stream.bindings.resultCrosses.group=tecDocGroup
#--------------------------------------------------------------------------

#-------------for getProductsByCodeByBrand method ---------------------
spring.cloud.stream.bindings.getProductByCodeByBrand.destination=getProductByCodeByBrandTopic
spring.cloud.stream.bindings.getProductByCodeByBrand.content-type=application/json

spring.cloud.stream.bindings.resultByCodeByBrand.destination=resultByCodeByBrandTopic
spring.cloud.stream.bindings.resultByCodeByBrand.content-type=application/json
spring.cloud.stream.bindings.resultByCodeByBrand.group=tecDocGroup
#--------------------------------------------------------------------------


#-------------for getProductsByVINNumber method ---------------------
spring.cloud.stream.bindings.getVehicleByVIN.destination=getVechileByVINTopic
spring.cloud.stream.bindings.getVehicleByVIN.content-type=application/json

spring.cloud.stream.bindings.resultByVIN.destination=resultVechileByVINTopic
spring.cloud.stream.bindings.resultByVIN.content-type=application/json
spring.cloud.stream.bindings.resultByVIN.group=tecDocGroup
#--------------------------------------------------------------------------

keycloak.realm = adetails-realm
keycloak.auth-server-url = http://keycloak:8080/auth
keycloak.ssl-required = external
keycloak.resource = adetails

keycloak.use-resource-role-mappings = true
keycloak.bearer-only = true
keycloak.cors = true

redis.server = redis
redis.port = 6379
