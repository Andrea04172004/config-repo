spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect


server.port=8081
spring.cloud.loadbalancer.ribbon.enabled=false

spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=jdbc:mysql://database:3306/adetails_dev
#spring.datasource.url=jdbc:mysql://storage-database:3306/adetails_dev

management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://eurekaserver:8761/eureka/

#spring.cloud.stream.bindings.output.destination=orgChangeTopic
#spring.cloud.stream.bindings.output.content-type=application/json

#spring.cloud.stream.kafka.streams.bindings.output.producer.keySerde==org.apache.kafka.common.serialization.StringSerializer
#spring.cloud.stream.kafka.streams.bindings.output.producer.valueSerde==org.apache.kafka.common.serialization.StringSerializer
#spring.cloud.stream.bindings.output.producer.use-native-encoding=true



spring.cloud.stream.bindings.inboundProdCatChanges.destination= orgChangeTopic
spring.cloud.stream.bindings.inboundProdCatChanges.content-type= application/json
spring.cloud.stream.bindings.inboundProdCatChanges.group= storageGroup
#spring.kafka.bootstrap-servers=kafka:9092



#spring.cloud.stream.bindings.input.destination=orgChangeTopic
#spring.cloud.stream.bindings.input.content-type=application/json
#spring.cloud.stream.bindings.input.group= storageGroup
#spring.cloud.stream.kafka.bindings.input.consumer.autoCommitOffset= false

#spring.cloud.stream.kafka.bindings.input.consumer.resetOffsets=true 
#spring.cloud.stream.kafka.bindings.input.consumer.startOffset=latest


spring.cloud.stream.kafka.binder.zkNodes=kafka
spring.cloud.stream.kafka.binder.brokers=kafka

spring.zipkin.baseUrl:http://zipkin:9411
spring.sleuth.sampler.percentage: 1

redis.server = redis
redis.port = 6379


keycloak.realm = adetails-realm
keycloak.auth-server-url = http://localhost:8080/auth
keycloak.ssl-required = external
keycloak.resource = adetails
keycloak.credentials.secret = 2e828271-9298-423d-908c-a679f70a7fab
keycloak.use-resource-role-mappings = true
keycloak.bearer-only = true

#rest.security.enabled=true
#rest.security.issuer-uri=http://localhost:8080/auth/realms/adetails-realm
#rest.security.api-matcher=/storage-service/**
#rest.security.cors.allowed-origins=*
#rest.security.cors.allowed-headers=*
#rest.security.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
#rest.security.cors.max-age=3600

#security.oauth2.resource.id=adetails
#security.oauth2.resource.token-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/token/introspect
#security.oauth2.resource.user-info-uri=${rest.security.issuer-uri}/protocol/openid-connect/userinfo
#security.oauth2.resource.jwt.key-value=-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjpMH1E7b6+t7QZo4/ptfTAVGxLzqy+cZ13IBfsZzD1ygvpR52pYv6ZOb+a7PiBbhqm3GRcPQKwtOPLAkYPXjxSufqc/R60zUXQoia0s5MnuF4zwNBIOjr/Bucxgt+9MA8wvS3i/8f5mAuoW/OgixLJCY9cdSsOVwY+Pr/UJm99tLsO3cNN80VSuUJuwdWyRpjk52ir611JFnSUCtzFyCejgjIddquI4MReK36VyMPbyM7YFh5UdZPMR1nAOj/lH84wFHlrxbhb6KvyXqQEH8b7wxF8LICelj9elglsBWwrTDb/PsXG8o3F7V1O5VTQkvVKF/gZW+S31TEfll2Szk5QIDAQAB\n-----END PUBLIC KEY-----

